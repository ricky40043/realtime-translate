# 若用 Docker Compose，優先用服務名
upstream frontend {
    server polyglot-chat_frontend_1:80;    # 前端容器名稱:容器內部端口
    # 前端現在使用 nginx 在容器內部的 80 端口
}

upstream backend {
    server polyglot-chat_backend_1:8081;   # 後端容器名稱:端口
}

# 允許的跨域來源（白名單；動態帶回 $http_origin）
map $http_origin $cors_origin {
    default "";
    "~^https?://localhost(:\d+)?$"             $http_origin;
    "~^https?://127\.0\.0\.1(:\d+)?$"          $http_origin;
    "~^https?://.*\.ngrok-free\.app$"          $http_origin;
    "~^https?://your-domain\.com$"             $http_origin;
}

server {
    listen 80;
    server_name localhost your-domain.com;
    client_max_body_size 100M;

    # 前端（Vite dev）含 HMR WebSocket
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Vite HMR WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade; # 需有下方 map
        proxy_read_timeout 86400;
    }

    # 後端 API
    location /api/ {
        # CORS 預檢（可選，後端已處理則不用）
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Headers "* " always;
            add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
            return 204;
        }

        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 回應也補 CORS（可選，後端已處理則不用）
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Credentials true always;

        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }

    # 後端 WebSocket
    location /ws {
        proxy_pass http://backend/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS（若 WS 端點需要）
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Credentials true always;

        proxy_read_timeout 3600;
        proxy_send_timeout 3600;
    }

    # 健康檢查
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }
}

# 放在 http 區塊中，支援 $connection_upgrade
map $http_upgrade $connection_upgrade {
    default upgrade;
    ""      close;
}
